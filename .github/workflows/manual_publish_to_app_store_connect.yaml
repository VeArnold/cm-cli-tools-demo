name: Publish to App Store Connect (manual)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      APP_STORE_CONNECT_ISSUER_ID: ${{ vars.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ vars.APP_STORE_CONNECT_KEY_IDENTIFIER }}
      APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
      DIST_CERTIFICATE: ${{ secrets.DIST_CERTIFICATE }}
      DIST_CERTIFICATE_PASSWORD: ${{ secrets.DIST_CERTIFICATE_PASSWORD }}
      DIST_PROFILE: ${{ secrets.DIST_PROFILE }}
      APP_STORE_APP_ID: ${{ vars.APP_STORE_APP_ID }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'

    - name: Install Codemagic CLI tools
      run: pip install codemagic-cli-tools

    - name: Set up keychain
      run: keychain initialize

    - name: Set up Provisioning profiles
      run: |
        PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
        mkdir -p "$PROFILES_HOME"
        PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
        echo ${DIST_PROFILE} | base64 --decode > "$PROFILE_PATH"
        echo "Saved provisioning profile $PROFILE_PATH"      
    - name: Set up signing certificate
      run: |
        echo $DIST_CERTIFICATE | base64 --decode > /tmp/certificate.p12
        keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $DIST_CERTIFICATE_PASSWORD

    - name: Set up code signing settings on Xcode project
      run: xcode-project use-profiles

    - name: Increment build number
      run: |
        cd ios
        agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))

    - name: Build ipa for distribution
      run: |
        flutter build ipa --release --export-options-plist=$HOME/export_options.plist

    - name: Publish the app to App Store Connect
      run: |
        APP_FILE=$(find $(pwd) -name "*.ipa")
        app-store-connect publish \
        --path "$APP_FILE"